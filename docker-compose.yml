services:
  guni_game:
    container_name: guni_game
    build: Services/Gunicorn_Game
    restart: always
    env_file: .env
    volumes:
      - Game:/app/Project
    depends_on:
      postgres:
        condition: service_healthy

  uvicorn:
    container_name: uvicorn
    build: Services/Uvicorn
    restart: always
    env_file: .env
    volumes:
      - Game:/app/Project
    depends_on:
      - postgres

  guni_profile:
    container_name: guni_profile
    build: Services/Gunicorn_Profile
    restart: always
    env_file: .env
    volumes:
      - Profile:/app/Project
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: database
    image: postgres:16.1-alpine3.18
    restart: always
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval:  5s
      timeout:  5s
      retries:  5

  game_db:
    container_name: game_db
    image: postgres:16.1-alpine3.18
    restart: always
    env_file: .env
    volumes:
      - game_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval:  5s
      timeout:  5s
      retries:  5

  nginx:
    container_name: nginx
    build: Services/NginxReverseProxy/
    restart: always
    env_file: .env
    ports:
    - "8080:8080"
    volumes:
      - django_static:/var/lib/nginx/static/
      - django_media:/var/lib/nginx/avatars/
    depends_on:
      - guni_profile
      - uvicorn


volumes:
  postgres_data:
    name: postgres_data

  game_db:
    name: game_db

  Game:
    name: Game
    driver: local
    driver_opts:
      type: none
      o: bind
      device: Game

  Profile:
    name: Profile
    driver: local
    driver_opts:
      type: none
      o: bind
      device: Profile

  django_static:
    name: django_static
    driver: local
    driver_opts:
      type: none
      o: bind
      device: Profile/staticfiles

  django_media:
    name: django_media
    driver: local
    driver_opts:
      type: none
      o: bind
      device: Profile/avatars
